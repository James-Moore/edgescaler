Operation:
    The EdgeScaler product is a Master-Slave distributed scale analysis platform.  It controls remote execution
    using the scale.anaxremote python module.  The scale.anaxremote master application performs non-interactive ssh
    execution of the scale.anaxscale python module on slave nodes.  The scale.anaxscale slave application executes
    0..* hzn, horizon-container, and docker operations.


Master Node Requirements;
    - EdgeScaler

Slave Node Requirements:
    - EdgeScaler
    - Bluehorizon
    - Anax-in-Container

EdgeScaler Python Packages:
    -   Click               7.0
    -   certifi             2019.3.9
    -   chardet             3.0.4
    -   docker              4.0.2
    -   idna                2.8
    -   pip                 19.1.1
    -   pprint	            0.1
    -   requests            2.22.0
    -   setuptools          41.0.1
    -   six                 1.12.0
    -   urllib3             1.25.3
    -   websocket-client	0.56.0


Usage is available for scale.anaxremote through the help flag on the top level program and all related commands.
    python3 -m scale.anaxremote --help

Usage is available for scale.anaxscale through the help flag on the top level program and all related commands.
    python3 -m scale.anaxscale --help


Usage - AnaxRemote:
    Usage: anaxremote.py [OPTIONS] COMMAND [ARGS]...

      The EdgeScaler product is a Master-Slave distributed scale analysis
      platform.  It controls remote execution using using the scale.anaxremote
      python module.  The scale.anaxremote master application performs non-
      interactive ssh execution of the scale.anaxscale python module on slave
      nodes.  The scale.anaxscale slave application executes 0..* hzn, horizon-
      container, and docker operations.

    Options:
      -l, --locallog INTEGER   0=debug, 1=info, 2=produciton, 3=error, 4=critical
                               [default: 0]
      -r, --remotelog INTEGER  0=debug, 1=info, 2=produciton, 3=error, 4=critical
                               [default: 0]
      -c, --count INTEGER      Number of horizon containers  [default: 1]
      -f, --configfile TEXT    File containing configuration json  [required]
      --help                   Show this message and exit.

    Commands:
      agreements       Collects agreement information for all containers on all...
      eventlog         Collect eventlogs for all containers on all hosts
      prune            Ensures there is a clean environment across all hosts
                       for...
      queryrunning     Lists the anax containers deployed on each hosts
      register         Registers Anax Containers on all hosts with hello world
      start            Starts Anax Containers on all hosts
      stop             Stops Anax Containers on all hosts
      unregister       Unregisters the Anax Containers on all hosts
      validaterunning  Validates if docker containers are in the running state

Usage - Anaxscale:
    Usage: anaxscale.py [OPTIONS] COMMAND [ARGS]...

      Used to control the Anax Docker Containers on this host.  All commands
      consume the count flag unless specified. To see which commands consume the
      count flag issue --help on the individual command.  The count flag
      replicates a  given operation across containers 1..COUNT.

    Options:
      -l, --log INTEGER        0=debug, 1=info, 2=warning, 3=error, 4=critical
                               [default: 1]
      -c, --count INTEGER      Number of horizon containers  [default: 1]
      -a, --anax TEXT          the location of ANAX_IN_CONTAINER's horizon-
                               container script. Export HZN_AIC instead of cli
                               flag  [required]
      -o, --organization TEXT  Must set HZN_ORG_ID or pass flag  [required]
      --help                   Show this message and exit.

    Commands:
      agreement        Returns True if an agreement has been established and is...
      agreements       Returns True if all agreements on this host are...
      eventlog         Collects the eventlogs for each container on this host
      node             Returns True if node has been configured; otherwise...
      prune            Ensures there is a clean environment for scale testing
      queryrunning     Lists the names of running anax containers.
      register         Registers the Anax Containers with hello world on this...
      restart          Restarts Anax Containers on this host
      start            Starts Anax Containers on this host
      stop             Stops Anax Containers on this host
      unregister       Unregisters the Anax Containers on this host
      validaterunning  Validates containers have transitioned to running.


Log Levels:
    The amount of information printed at runtime is configurable using local and remote logging flags.
    Two flags are provided because the enduser may want more information about what is occuring on their
    local master device or conversely they might be more interested in the operations occuring remotely
    on the slave devices.  Accordingly, the two flag values are provided for the user to set based on
    their needs.

    Local logging (master device) levels supported are 0-3.  Local logging levels set above level 2
    will provide no additional reduction of information.

    Remote logging (slave devices) levels supported are 0-1.  Remote logging levels set above level 1
    will provide no additional reduction of information.


Configuration Files:
    A configuration file is required for the master device (scale.anaxremote).  The configuration file contains
    all required (plus any additional) environment variables.  It also contains the hosts list.  The hosts list
    represents all the slave devices that will be controlled by the master.  The configuration file format
    description is as follows:

    Configuration File Definition:
        {
        "env": {
            "HZN_EXCHANGE_URL": "https://stg.edge-fabric.com/v1",
            "DOCKER_HUB_ID": "YOURHUBID",
            "HZN_ORG_ID": "YOURORGID",
            "EXCHANGE_USER": "iamapikey",
            "EXCHANGE_PW": "YOURPD",
            "HZN_EXCHANGE_USER_AUTH": "iamapikey:YOURPD",
            "MYDOMAIN": "YOURDOMAIN",
            "HZN_AIC": "/YOURPATH/anax-in-container/horizon-container (YOUR LOCATION TO AIC)"
        },
          "endpoints": ["YOURHOSTNAMELIST",]
        }


The Count Flag:
    The count flag is included to manage the operations for anax containers each slave.  The master
    informs the slave devices (hosts) that it should execute an operation on "count" number of anax containers.
    There is a limit for edge fabric nodes due to a docker dependency.  The limit pertains to the number of docker
    networks supported across all containers/patterns existing on your slave.  The limit is 30 docker networks per node.
    So a deployment is at its limit if: 1 anax container with 1 pattern that has 30 dependant services.  Likewise,
    30 anax containers with 1 pattern that has 1 top level service is also using 30 docker networks.  In the future
    the hope is a solution for this limiation.
